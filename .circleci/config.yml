# Use the latest 2.1 version of CircleCI pipeline process engine. 
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  # The Node.js orb contains a set of prepackaged CircleCI configuration you can utilize
  # Orbs reduce the amount of configuration required for common tasks. 
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/node
  node: circleci/node@4.1
  browser-tools: circleci/browser-tools@1.1.3
  heroku: circleci/heroku@1.2.6


jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:  
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/node
    docker:
      - image: cimg/node:14.17.3-browsers
    # Then run your tests!
    # CircleCI will report the results back to your VCS provider.
    steps:
      # Checkout the code as the first step.
      - checkout
      # Next, the node orb's install-packages step will install the dependencies from a package.json.
      # The orb install-packages step will also automatically cache them for faster future runs.
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - node/install-packages
      - run: mkdir ~/junit
      - run:
          name: Run tests
          command: npm run headless-test
          environment:
            JUNIT_REPORT_PATH: ./junit/
            JUNIT_REPORT_NAME: test-results.xml
          when: always
      - store_test_results:
          path: ./junit
      - store_artifacts:
          path: ./junit
      - setup_remote_docker:
          version: 18.09.3
      - run:
          name: Build Docker Image
          command: |
            docker build -t ccchallengeapp:circleci .
            docker images
  deploy:
    executor: heroku/default
    steps:
      - checkout
      - heroku/install
      - setup_remote_docker:
          version: 18.09.3
      - run:
          name: Pushing to Heroku Registry
          command: |
            heroku container:login
            heroku container:push web -a $HEROKU_APP_NAME
            heroku container:release web -a $HEROKU_APP_NAME
    

workflows:
  # Below is the definition of your workflow.
  # Inside the workflow, you provide the jobs you want to run, e.g this workflow runs the build-and-test job above.
  # CircleCI will run this workflow on every commit.
  # For more details on extending your workflow, see the configuration docs: https://circleci.com/docs/2.0/configuration-reference/#workflows
  build_test_deploy: 
    jobs:
      - build-and-test
      - deploy:
          requires:
              - build-and-test
          filters:
            branches:
              only: main
            tags:
              only:/^v[0-9]+(\.[0-9]+)*$/
